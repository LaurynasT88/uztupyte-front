Subject: [PATCH] navbar and styling
dummy admin page
add basic navbar
add dummy homepage
read roles from token and set up navigation
rename and reformat
---
Index: src/components/login.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/login.js b/src/components/Login.js
rename from src/components/login.js
rename to src/components/Login.js
--- a/src/components/login.js	(revision c9483163e3de48d3671f49b7341dbf34589861ee)
+++ b/src/components/Login.js	(revision af69ae6c6ec6f8b3206a190b809f20a879b587a1)
@@ -1,6 +1,7 @@
-import React, { useState } from "react";
+import React, {useState} from "react";
 import axios from "../services/api";
-import { useNavigate, Link } from "react-router-dom";
+import {Link, useNavigate} from "react-router-dom";
+import {jwtDecode} from "jwt-decode";
 
 const Login = () => {
   const [username, setUsername] = useState("");
@@ -9,13 +10,24 @@
   const [error, setError] = useState("");
   const navigate = useNavigate();
 
+
   const handleLogin = async (e) => {
+
     e.preventDefault();
+
     try {
       const response = await axios.post("/auth/login", { username, password });
+
       const token = response.data.jwt;
-      localStorage.setItem("token", token); // Store token in local storage
-      navigate(role === "ADMIN" ? "/admin" : "/"); // Redirect based on role
+      localStorage.setItem("token", token);
+      const decodedToken = jwtDecode(token);
+      const userRoles = decodedToken.ROLES || [];
+      localStorage.setItem("roles", JSON.stringify(userRoles));
+
+      userRoles.includes("ADMIN")
+          ? navigate("/admin")
+          : navigate("/");
+
     } catch (err) {
       setError("Invalid username or password");
     }
Index: src/pages/Register.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Register.js b/src/pages/Register.js
--- a/src/pages/Register.js	(revision c9483163e3de48d3671f49b7341dbf34589861ee)
+++ b/src/pages/Register.js	(revision 6b88cdd7f1e138822c5d13b3148bb2160fea7c25)
@@ -88,8 +88,7 @@
           <select
             value={role}
             onChange={(e) => setRole(e.target.value)}
-            required
-          >
+            required>
             <option value="USER">User</option>
             <option value="ADMIN">Admin</option>
           </select>
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision 6b88cdd7f1e138822c5d13b3148bb2160fea7c25)
+++ b/package-lock.json	(revision af69ae6c6ec6f8b3206a190b809f20a879b587a1)
@@ -10,6 +10,7 @@
       "dependencies": {
         "axios": "^1.7.9",
         "cra-template": "1.2.0",
+        "jwt-decode": "^4.0.0",
         "react": "^19.0.0",
         "react-dom": "^19.0.0",
         "react-router-dom": "^7.1.5",
@@ -10899,6 +10900,14 @@
         "node": ">=4.0"
       }
     },
+    "node_modules/jwt-decode": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/jwt-decode/-/jwt-decode-4.0.0.tgz",
+      "integrity": "sha512-+KJGIyHgkGuIq3IEBNftfhW/LfWhXUIY6OmyVWjliu5KH1y0fw7VQ8YndE2O4qZdMSd9SqbnC8GOcZEy0Om7sA==",
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/keyv": {
       "version": "4.5.4",
       "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision 6b88cdd7f1e138822c5d13b3148bb2160fea7c25)
+++ b/package.json	(revision af69ae6c6ec6f8b3206a190b809f20a879b587a1)
@@ -5,6 +5,7 @@
   "dependencies": {
     "axios": "^1.7.9",
     "cra-template": "1.2.0",
+    "jwt-decode": "^4.0.0",
     "react": "^19.0.0",
     "react-dom": "^19.0.0",
     "react-router-dom": "^7.1.5",
Index: src/App.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.css b/src/App.css
--- a/src/App.css	(revision af69ae6c6ec6f8b3206a190b809f20a879b587a1)
+++ b/src/App.css	(revision 4f6eab6d4d568b954da5da6bd46059d7dec8e99e)
@@ -65,4 +65,95 @@
 .login-container a:hover,
 .register-container a:hover {
   text-decoration: underline;
-}
\ No newline at end of file
+}
+
+.container {
+  max-width: 600px;
+  margin: 0 auto;
+  padding: 20px;
+  border: 1px solid #ccc;
+  border-radius: 5px;
+  background-color: #f9f9f9;
+}
+
+h2, h3 {
+  margin-bottom: 20px;
+}
+
+.product-list, .cart-list, .user-list, .order-list {
+  list-style: none;
+  padding: 0;
+}
+
+.product-list li, .cart-list li, .user-list li, .order-list li {
+  padding: 8px;
+  border-bottom: 1px solid #ccc;
+  display: flex;
+  justify-content: space-between;
+}
+
+button {
+  padding: 5px 10px;
+  background-color: #007bff;
+  color: white;
+  border: none;
+  border-radius: 4px;
+  cursor: pointer;
+}
+
+button:hover {
+  background-color: #0056b3;
+}
+
+/* Navbar */
+.navbar {
+  background-color: #007bff;
+  padding: 10px 20px; /* Increased left/right padding */
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+}
+
+/* Navbar links (including Login) */
+.navbar a {
+  color: white;
+  text-decoration: none;
+  padding: 5px 15px; /* More padding for spacing */
+}
+
+/* Push first (Home) and last (Login) links away from edges */
+.navbar a:first-child {
+  margin-left: 20px;
+}
+
+.navbar a:last-child {
+  margin-right: 20px;
+}
+
+/* Hover effect */
+.navbar a:hover {
+  text-decoration: underline;
+}
+
+/* Active link */
+.navbar .active {
+  font-weight: bold;
+  border-bottom: 2px solid white;
+}
+
+/* Logout Button (should match links & have padding) */
+.logout-btn {
+  background: none;
+  border: none;
+  color: white;
+  font-size: 16px;
+  cursor: pointer;
+  padding: 5px 15px; /* More padding for spacing */
+  margin-right: 20px; /* Push it from the right edge */
+}
+
+.logout-btn:hover {
+  text-decoration: underline;
+}
+
+
Index: src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.js b/src/App.js
--- a/src/App.js	(revision af69ae6c6ec6f8b3206a190b809f20a879b587a1)
+++ b/src/App.js	(revision 4f6eab6d4d568b954da5da6bd46059d7dec8e99e)
@@ -1,19 +1,23 @@
 import React from "react";
-import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
+import {BrowserRouter as Router, Route, Routes} from "react-router-dom";
 import Login from "./components/Login";
 import Register from "./pages/Register";
-// import Home from "./pages/Home";
+import Home from "./pages/Home";
+import Admin from "./pages/Admin";
+import Navbar from "./components/Navbar";
 import "./App.css";
 
 function App() {
 
   return (
     <Router>
+      <Navbar />
       <div className="App">
         <Routes>
-          {/* <Route path="/" element={<Home />} /> */}
+          <Route path="/" element={<Home/>}/>
           <Route path="/login" element={<Login />} />
           <Route path="/register" element={<Register />} />
+          <Route path="/admin" element={<Admin />} />
         </Routes>
       </div>
     </Router>
Index: src/pages/Home.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Home.js b/src/pages/Home.js
--- a/src/pages/Home.js	(revision af69ae6c6ec6f8b3206a190b809f20a879b587a1)
+++ b/src/pages/Home.js	(revision 3435943451aff8981943a548ca16907f9dafa100)
@@ -1,0 +1,38 @@
+import React, {useState} from "react";
+
+const Home = () => {
+
+  const [products, setProducts] = useState([
+    {id: 1, name: "Product A", price: "$10"},
+    {id: 2, name: "Product B", price: "$20"},
+  ]);
+
+  const [cart, setCart] = useState([]);
+
+  const addToCart = (product) => {
+    setCart([...cart, product]);
+  };
+
+  return (
+      <div className="container">
+        <h2>Products</h2>
+        <ul className="product-list">
+          {products.map((product) => (
+              <li key={product.id}>
+                {product.name} - {product.price}
+                <button onClick={() => addToCart(product)}>Add to Cart</button>
+              </li>
+          ))}
+        </ul>
+
+        <h3>Cart</h3>
+        <ul className="cart-list">
+          {cart.map((item, index) => (
+              <li key={index}>{item.name} - {item.price}</li>
+          ))}
+        </ul>
+      </div>
+  );
+};
+
+export default Home;
Index: src/components/Navbar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navbar.js b/src/components/Navbar.js
new file mode 100644
--- /dev/null	(revision 4f6eab6d4d568b954da5da6bd46059d7dec8e99e)
+++ b/src/components/Navbar.js	(revision 4f6eab6d4d568b954da5da6bd46059d7dec8e99e)
@@ -0,0 +1,50 @@
+import React from "react";
+import {NavLink, useNavigate} from "react-router-dom";
+
+const Navbar = () => {
+  const navigate = useNavigate();
+  const token = localStorage.getItem("token");
+  const roles = JSON.parse(localStorage.getItem("roles") || "[]");
+
+  const isAdmin = roles.includes("ADMIN");
+  const isAuthenticated = !!token;
+
+  const handleLogout = () => {
+    localStorage.removeItem("token");
+    localStorage.removeItem("roles");
+    navigate("/login");
+  };
+
+  return (
+      <nav className="navbar">
+        {/* Show Home only if NOT an admin */}
+        {!isAdmin && (
+            <NavLink to="/"
+                     className={({isActive}) => (isActive ? "active" : "")}>
+              Home
+            </NavLink>
+        )}
+
+        {/* Show Admin Panel if user is an admin */}
+        {isAdmin && (
+            <NavLink to="/admin"
+                     className={({isActive}) => (isActive ? "active" : "")}>
+              Admin Panel
+            </NavLink>
+        )}
+
+        {/* Show Logout if authenticated, otherwise show Login */}
+        {isAuthenticated ? (
+            <button onClick={handleLogout}
+                    className="logout-btn">Logout</button>
+        ) : (
+            <NavLink to="/login"
+                     className={({isActive}) => (isActive ? "active" : "")}>
+              Login
+            </NavLink>
+        )}
+      </nav>
+  );
+};
+
+export default Navbar;
Index: src/pages/Admin.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Admin.js b/src/pages/Admin.js
new file mode 100644
--- /dev/null	(revision 20ac43f863b6b3bdb5a40b6a9e6811ced2ded024)
+++ b/src/pages/Admin.js	(revision 20ac43f863b6b3bdb5a40b6a9e6811ced2ded024)
@@ -0,0 +1,55 @@
+import React, { useState } from "react";
+
+const Admin = () => {
+  const [products, setProducts] = useState([
+    { id: 1, name: "Product A", price: "$10" },
+    { id: 2, name: "Product B", price: "$20" },
+  ]);
+  const [users, setUsers] = useState([
+    { id: 1, name: "User1", blocked: false },
+    { id: 2, name: "User2", blocked: true },
+  ]);
+  const [orders] = useState([{ id: 1, user: "User1", status: "Shipped" }]);
+
+  const toggleBlockUser = (id) => {
+    setUsers(users.map(user => user.id === id ? { ...user, blocked: !user.blocked } : user));
+  };
+
+  return (
+      <div className="container">
+        <h2>Admin Panel</h2>
+
+        <h3>Manage Products</h3>
+        <ul className="product-list">
+          {products.map((product) => (
+              <li key={product.id}>
+                {product.name} - {product.price}
+                <button>Edit</button>
+                <button>Delete</button>
+              </li>
+          ))}
+        </ul>
+
+        <h3>Manage Users</h3>
+        <ul className="user-list">
+          {users.map((user) => (
+              <li key={user.id}>
+                {user.name} - {user.blocked ? "Blocked" : "Active"}
+                <button onClick={() => toggleBlockUser(user.id)}>
+                  {user.blocked ? "Unblock" : "Block"}
+                </button>
+              </li>
+          ))}
+        </ul>
+
+        <h3>Orders</h3>
+        <ul className="order-list">
+          {orders.map((order) => (
+              <li key={order.id}>{order.user} - {order.status}</li>
+          ))}
+        </ul>
+      </div>
+  );
+};
+
+export default Admin;
